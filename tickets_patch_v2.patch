diff --git a/tickets/__pycache__/views.cpython-311.pyc b/tickets/__pycache__/views.cpython-311.pyc
index be929cc30291383c134bfff1a00c9900b0798fcc..83399840da9b9bbfa3a40ab88b322aa9af12a72e 100644
GIT binary patch
literal 3117
zcmcgu(Q6w=8lRO`D_JX5E7?xt#BsN=6IHP-73y4YYC_Tmr){uPnox*d#6~-@*V)yo
zv%9_|$e=q6^_6f}jvmQF3N9SEqzN?8{s;XBcEy611w-NJL*I0Sd&$#%v#XUYH+{H!
zxM4i|&G-H0`@Z=+^Besmn@uBVcV@p>olGJ0PdbTOtS7wqGYI#QjATYd8dGH$D#z5A
z7O%!Nw#sUWY9i3ZRZdG*lYz{tDQ&1a6vzoRt?^YJWKK@187*7Q269S$P0Lkt48n{&
zw22-;oTpKAR24v*{*^W_^H)(R^9#k582>d@Ur`!0f<Lnqg5^@&=Ll}dnD{A}f~s!%
z`4w!|^c!m+*K|^wdwUKRCJA20#K0hqeqfr-Pq5L{8wOs~$qhx8aRUsAOGLMtzc67a
z?wV4+g-y_>LkXZ-of@N-03i;4FCIee?xPl3i!5lZkK2yw+P6_bW}d|!0p{r*j(Yl4
z8?4a=^Iye?|4%VuEry&l;dDf8jqWpOuinf4oSw0RyV{61CVs;g7kS<PJ+R-noY-I?
zpU=(Q9tz_1vuiSP;y^?e>_ZV+=57V`CpTN{c5wD1OY|L#NIn4^AKCVQ<>a%}fk=t{
zJ8vawnF!xXyxPZLEC!iJqZJ65$M$4-XfV>?>?&%-TTqo&Oin*!H#qZ+y_GE_^DXWX
zoTaDz^F;5D^(|o1BD7Bx!<57(Q5tonDXF52MKd_)MmZe-mMm<TL=si#0d@}|;@hCX
z4HFyU9kGdtrkGf)6D$$YYUpCa!s~iD@N!jGb<r{`i72`uN)}zE)Fl}vO$)<)6Qz0`
zzC@HnhzA+{_zm1_DO~L*>#71Pj3<oGHY5%ENz1_G8m`mpNCTQ!uHCq^?6V(Vxq598
zv|L@+Af1<)-fqs)<V&od?9F}lCfr|tNHJ=mZ$AxU&+FYn4^>fsOm3G~O-(HcK1<C$
zw?b*b@VT3cYSMX71%uFI;wM9*G5olss)U{ZGEDWHhRs!7_EQjKT~Za<XAKD$s6Y|)
zLXjjLSQtu4%1)mJWj{=nV{|w~hu2~7xiB}Vi4K*&Z5nhX{Z~SJ`Br6B*KkFbl!~z`
z5nO2!oibk~+R(a!e{YnVcYHq7)M#Bu5nRyxjWa+%ZPYEG{Nb-Mt}wYHoazXto)6i=
zDMvW#3TJnO3mxHtBfRel@3%kn05<OCr*`two&5CkF*`r)<llAk@9yN^>*U{a@)zCw
z#r8*C4yE#46i*a)3x~fd?-YuiLh<>T9~SIF(J7pF3+K0zTgjh8+f=78<rGf3g_B!J
zSeOyo7rms=MO@<aZf@*B@!^bpr2Kfw$yMB3WsCLr!o713KJD<6Hb428{Vw}$_DSwp
z4kq5{*!}B&y}pgVyzY$7xT7;$i=J5gduD6V%^dSGg}+?>;_{!C?k#OC?G7LP`qK8Y
zGyaY{{*E&|=MK-=nK=kPa?}$>ywM5okk}nc<hU+^p?&G!8I&n}S+tK<p1<z!^DaMc
zv-2;YeyF~m-un;2@1Uyxj|aiXnSH8*M<srcD9n9SX7=d`p%w!~4VgdfXTK4X6RlW{
z9<87aP+P3lC)`$Sdtbx|jSf8KKy9OYHj^IXUX!`O90zAWRY_|Tpdk}Uq%Hxm^ax6X
z8?K9R^Bb}v1I+}O3x=}N018nf5Kvl=c0{;RB2a~@+zr?a2uJzx`vx$VR5z_q4eKcT
z$lzBz9=Sdqk`T#5B7{CXcZ<t9_{R<4y@2%$U2ICgk--Y!u-;`W0}sWTxBOJ(iO?#P
zGUN#LM9H3v(}7Ywp(Q2s5e$ihgEUOb@OjCgTLOABb#k1V`)pB)lS!&LMTaRE49fAq
z0^}ro{j6lt+SI~iNEvi*QxL5uTyX(qhVL!7{KO7_qQjqfJa6+S9R9S+pWfjYI{bpe
zpL6+hUBo0lW_EK^_K9UDcg4+Ju~S!m&Q5&2{`k0^oprLaZg#f4_|wQldvSBg8xtRn
zw-;UZkjJJ!zx>C`e^}aFYA@~b!+*Q<VA&a&c1NZie#YfzY<7mc1&J(|3jTz=CN);{
zGUYR(+$h8Auv(UJT_+Ok*&uXRzR&|1t2#03mT3fB85V<9&F6ani>O9GrhUyS{Jsmy
z>mPYlBu$qwETP93XgZt(T%MpWgb|WBCCH$JPf(C|P~w-V1;AS>K1a@go&I(+Y#6$6
zhG9H3Zx414owt9xd*}^&uzP6M9_${Pu?PE4=!iYoJ#@?-?7(9&p&NUXIom}r{3{OA
Y&52O)0TbAA%xo9I(6>d3KpX7%KVrtt%K!iX

delta 1078
zcmZWnOKTHR6ux)f$uyH%X-!d^pw>D*D!w*-*oDQ~E_}PN3L)l>Hg=Ney*EWAu~`(c
zQqXc2x^Usfh^C?oL2&C@utiV?ihm(4y6MVu^K#*VIdjf8=QZa$?_(dfIBz16Fap`z
z|77N(zU;*C-15NDNsZ{fl?_dYFd`Z;{BYKuwlVTBF&9t;;;S;LF4G-=TK}OD61s%k
z@bZ^Q(T|UXo?(QZBaV<rVONw@M=N1&iVIe3Ur8yV+ghs}!Ly3A=>u-IFoYmN7a!Fg
z1A>)ThQR7pF|S4qdJ$Yxx<?RER@4f#slwBck_vfN%PXqM&_BD81x31qZ^f`C-l_3J
zxTp~QrBc#(Z!1#vCPq=Ks8AW6hQP0xVpIJ%ubn@4>GEk82Sz%d&1U#!2hXHuJ<f*w
z4CAg6m`y*>ZsuwBL08i~oXHXI-rx++`fh~ExdJnP<F=RPEKpOvPbDjXk@fgYp3n~I
zSQ(a_OZgcRXe>471zLf56Ep~?sh8p&N#3|mb%>*KZB*{l)dQ1ycMBflG%CSPP=V2y
zATZPU9QW>VCX>WBee~K6FyticGpI7!=tR-(rQA;^vF0RJon1eiUFC^&yL)kDX{0<}
zGmsTsc=)1c&5VCH<LlAh7XvR3u0{ubL<b&gzwGGK(I=yeV@qQ-q=in1-^LlIrUPR&
z1gbo-VToaL@cJj{1ZUA^3?W`;A7GFoUcnXct8J{L5IBHj+XsHzoB-awBDe~@c_dxE
zkw!JCx!gljhzgwdDXu17TZ{8Rp>k(7uwa!rk|BBOK$vS$16~b&48~Kuz-SL3ft_M3
zb1MgH=Xu&KW7@lSRT`5(Tq=1-OpcgHB<OZ{2ayz)Es_ly=x)IFAQVAt3M|;VgPgb+
z4v(8V!9VLd;!*hODI=RFp3fSC=<<?S{X(eZtX|_SqB5c0W78Ue_=4}9r27Gr+htX8
r#hwyh?E@#b;h`D=^+!cY=R#jik-%}VYl@8z)exxmrxs90>ka+_5+?C0

diff --git a/tickets/templates/tickets/index.html b/tickets/templates/tickets/index.html
index 65bb38e..7f93022 100644
--- a/tickets/templates/tickets/index.html
+++ b/tickets/templates/tickets/index.html
@@ -73,6 +73,7 @@
         <h1>Gestión de Tickets</h1>
         <p><a href="{% url 'index' %}" class="button">Volver a Inicio</a></p>
         {% if user.is_authenticated %}
+            {% if form %}
             <div class="ticket-form">
                 <h2>Crear nuevo ticket</h2>
                 <form method="post">
@@ -81,6 +82,7 @@
                     <input type="submit" value="Crear Ticket">
                 </form>
             </div>
+            {% endif %}
             <h2>Lista de tickets</h2>
             <table class="ticket-table">
                 <thead>
@@ -103,7 +105,11 @@
                         <td>{% if ticket.assigned_to %}{{ ticket.assigned_to.username }}{% else %}-{% endif %}</td>
                         <td>
                             {% if ticket.status == 'pendiente' %}
-                                <a href="{% url 'tickets:attend' ticket.id %}" class="attend-link">Marcar como atendido</a>
+                                {% if is_userTec %}
+                                    <a href="{% url 'tickets:attend' ticket.id %}" class="attend-link">Marcar como atendido</a>
+                                {% else %}
+                                    Pendiente
+                                {% endif %}
                             {% else %}
                                 Atendido
                             {% endif %}
diff --git a/tickets/views.py b/tickets/views.py
index ca990f0..a3025dc 100644
--- a/tickets/views.py
+++ b/tickets/views.py
@@ -1,6 +1,8 @@
 from django.contrib.auth.decorators import login_required
 from django.shortcuts import render, redirect, get_object_or_404
 from django.urls import reverse
+from django.http import HttpResponseForbidden
+from django.contrib.auth.models import Group
 
 from .models import Ticket
 from .forms import TicketForm
@@ -14,13 +16,21 @@ def ticket_list(request):
     Muestra la lista de tickets existentes y permite crear uno nuevo.
     Solo usuarios autenticados pueden acceder a esta página.
     """
-    tickets = Ticket.objects.all()
-    form = TicketForm()
+    # Determinar rol del usuario según los grupos
+    is_client = request.user.groups.filter(name='clients').exists()
+    is_userTec = request.user.groups.filter(name='userTec').exists()
 
-    # Procesar formulario de creación de ticket
-    if request.method == 'POST':
-        form = TicketForm(request.POST)
-        if form.is_valid():
+    # Filtrar tickets según rol
+    if is_client:
+        tickets = Ticket.objects.filter(created_by=request.user)
+    else:
+        tickets = Ticket.objects.all()
+
+    # Manejo del formulario de creación: solo clientes pueden crear tickets
+    form = None
+    if is_client:
+        form = TicketForm(request.POST or None)
+        if request.method == 'POST' and form.is_valid():
             ticket = form.save(commit=False)
             ticket.created_by = request.user
             ticket.save()
@@ -29,6 +39,8 @@ def ticket_list(request):
     context = {
         'tickets': tickets,
         'form': form,
+        'is_client': is_client,
+        'is_userTec': is_userTec,
     }
     return render(request, 'tickets/index.html', context)
 
@@ -40,6 +52,10 @@ def attend_ticket(request, pk):
 
     Asigna el ticket al usuario que realiza la acción y actualiza el estado a "atendido".
     """
+    # Verificar que el usuario pertenece al grupo userTec
+    if not request.user.groups.filter(name='userTec').exists():
+        return HttpResponseForbidden("No tienes permiso para atender tickets.")
+
     ticket = get_object_or_404(Ticket, pk=pk)
     # Actualizar estado y usuario asignado
     ticket.status = 'atendido'
