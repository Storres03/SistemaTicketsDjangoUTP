diff --git a/config/__pycache__/__init__.cpython-311.pyc b/config/__pycache__/__init__.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..10bd0b2bcacca890add928cff27e9d6f421e3a06
GIT binary patch
literal 151
zcmZ3^%ge<81Upr_GC=fW5CH>>P{wCAAY(d13PUi1CZpd<h9V{)|1(JPmzI7;er~FM
zeqyG6aYkZMs(wLHepYI7iGFf^URq|letdjpUS>&ryk0@&FAkgB{FKt1RJ$TppjMFK
V#r#0x12ZEd;|B&9QN#=s0{}CnA%Xw^

literal 0
HcmV?d00001

diff --git a/config/__pycache__/settings.cpython-311.pyc b/config/__pycache__/settings.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..df871d35432074cf0c3944167d38e9db14c71aa6
GIT binary patch
literal 2711
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
Lv>d(8UBLRkatnem

literal 0
HcmV?d00001

diff --git a/config/__pycache__/urls.cpython-311.pyc b/config/__pycache__/urls.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..31302cac05ad4f1917b77fe777d38e486295c273
GIT binary patch
literal 1224
zcmb7DO=}ZD7@plszP7d%p&*{7Ej3+8cd*b)@DsII5D$J3h+w+iog^D~cb1un+JMkw
z5riBH`U9jQ{+R}HD0}tfEzny}&g=&SsiKqJ<;^?KJn!?oGxK$R-T-pkUHi}*76AC6
z{^X;Q1!rGm@Cmq}1zgS5eJ#*ix~AfSUkG3e2E|rU13Dnkg+%X{a)N$2kB)T!zRNcq
z39=}^MYnXU$r<^k;{sec!Bzf->lRuSxB3j2hW%a^F<v}<j2s$vyzYS6!lNPTP?lv-
z#Au&5!ZM8KJ%V-z%#Um#2n+cx@;xpPqXR)Wk|Z1nir#qSEw|9NWC$oD$O|P|kkUpz
zu{lAUkcNTe=m`<=2F5ORxaIckuuJoD4h=8~@s_oT1&ut1V+F>tJjcevcXlATc*EEp
zgifM3DVvbqu+Tl%MRth1Afik(5b7`*pkTjkM^TncWhVH|46ht012YcgQfaogUaQqJ
zUp*R-ItuN8+^VU#W*YZ>oAZr5Y0RBr{gVnRdW0z<R-!nU^GI_2j~a!yY~EHR>*jBY
zc0$J=xL(+mO-Sk~Yifh@{_G@;K~jp`9)%_AChBCZY^3c<x5H8m&qZd~deW4CR=elZ
zE|v|<E7epY;jNjb@lzdSQ;UnX8+f6q$53@VE@$XrDaqp)46CZ&$+}@hc+P7gI38Zg
zq9p&stj6VbTb`zNJ6^~PNZ*2adraO|5YNrHVo+vSQKcdG1c{;Y8qdw_|2J?Zr@{Gk
ztZHLwdzklZMsRjYae8Z#Q)xx}=ariQbq7AV%`VGj>X!14@-r=Hnl{xJH8=(8gMhYt
z0?_Pp3f4|8dZr~%tR6f#ygJ%CY8>4e!_^5~J%tsSx^mb&Y>r-z=a(n*%VW4Qfh+06
hwNZ1_{QPRXRG%!>$8ci;H>PE{s2|L!A6t-$egUsIX#fBK

literal 0
HcmV?d00001

diff --git a/config/settings.py b/config/settings.py
index d6ad785..0328279 100644
--- a/config/settings.py
+++ b/config/settings.py
@@ -38,6 +38,7 @@ INSTALLED_APPS = [
     'django.contrib.messages',
     'django.contrib.staticfiles',
     'home',
+    'tickets',  # Nueva aplicación para la gestión de tickets
 ]
 
 MIDDLEWARE = [
diff --git a/config/urls.py b/config/urls.py
index 6346c4b..62ead50 100644
--- a/config/urls.py
+++ b/config/urls.py
@@ -20,4 +20,5 @@ from django.urls import path, include
 urlpatterns = [
     path('admin/', admin.site.urls),
     path('', include('home.urls')),
+    path('tickets/', include('tickets.urls')),  # Ruta para la gestión de tickets
 ]
diff --git a/home/__pycache__/__init__.cpython-311.pyc b/home/__pycache__/__init__.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..66e146c6b108aafdd46caf690e1ad84b31864825
GIT binary patch
literal 149
zcmZ3^%ge<81iMtaGC=fW5CH>>P{wCAAY(d13PUi1CZpd<h9V{)|1(JPmxg{uer~FM
zeqyG6aYkZMs(wLHepYI72}C$PJ~J<~BtBlRpz;@oO>TZlX-=wL5i3w5$mn8zAn}2j
Pk&*EO1B@tQ28say-J2k^

literal 0
HcmV?d00001

diff --git a/home/__pycache__/admin.cpython-311.pyc b/home/__pycache__/admin.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..9f85059eb4bb5ac4d058a65b3bd6b5ed07b1a12c
GIT binary patch
literal 694
zcmbVIze~eF82zsKVJx&%>Q)L4O(9G34~XC*x=2B%Y%zDVSCd@1qy?RwoZMWU6mfR(
zuSg_dxz(v#p<5>}*3jxCeSG)b`yRZz$M;mJltJRHb=x-(z-K-bP=3gKA;~>pz{rOH
zIS2tRVZ|>6ilYRoqXwFz1-hdnAZV~v*dL67t=~j>l>fZQv&6qV>INQd1CRdKgVi&z
zv}qpILPB$KK*MRC-BQKQNjN59>~hKuy_k+!Bx)<EOUbnx3H_XUmn0TOmoq%_Vs>h6
ziz*(tVUKk@7RH=j@O;ri4;UtX#5Fl^J#YCYdA>xUMl>eE;G{>RnDA$qOBEKT-Dd%@
znM>`c?{Z=fIU5i!UdrELJHxAmu`iz<`Q(7tq$^J!y~;LI5JD5!OMcg^q@mIbHfvQt
z`c3%*>hDlbcFh#p8MG5<Pe5DAtrW}*%mmCe`R*u%Mh1-p8tdwD3e60fNm0BilYaq5
CCy>zq

literal 0
HcmV?d00001

diff --git a/home/__pycache__/apps.cpython-311.pyc b/home/__pycache__/apps.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..99c6b307bfe68dd324c1a1e77bab4d5e0f1e2e71
GIT binary patch
literal 516
zcmZutJx{|h5IrX;D*Zsvp;8A1q%K*Kl>s3Y5FjCSVasBf+HF%Mbx4{4rVdPqfvx`l
zg!l*iijGxQCbpt5b>f_)NC?jM`JM0GvwhF?dIiwl+V{f;+}~BOwo(C73&9LHaN>ba
z96~^YGvL}Ca9xlm9pDvLZjQ!{OE60xDl|#5*$IMUIqtiIUctyVQUqxe!3+dAgag(R
zN9USja2+*_q;f8OkyqdD@(~*kq{Xi+Uvl9^){#5t#1nby3Xdno5UE|Wl$0qQGha}e
zR47Ge>?vHM^g3o<k!f(zXR$Y-4C`q>7f`tuNY%quZClCNlDT#?WTCKwP>w`zk{`1m
zh^*iyR1M0Ufgoz3oBoVNYkzJu7uB8Vi5g*j&Fz|cQZ4?XghJK2T&ku}M%+TQDj(#}
nKMc1qR2_>h&@FXB$O87}zvps8BaJ2eb&su2b^7&BD!c3(0)>7)

literal 0
HcmV?d00001

diff --git a/home/__pycache__/models.cpython-311.pyc b/home/__pycache__/models.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..5f2b533abe07cb21091da8fecc35d49a8ee6e500
GIT binary patch
literal 3171
zcmchZ&u`Oa7{~4Ww9}+c49Q?>M^@67h^|qyYSL6TiH)&k(=sF~4%sBj_;p*C)b3up
z6;w>hfkQPhsfS4*!6Z&y85}qwPWuyV$%n|dX(w();lyQo9=l1wN!v+CdlNtQ`@YZn
zzR&ym^L}6dp2?&bNY6??FZ~r~n7=X8O_29f=MT8uVF*LmCbPmeSeA(}Uos?eiy={!
zU5@PeG22mwc?4IG8d2XX243+)ykfpr0=$xkc*T7$4!rn7yb>gJnJEuF#{kN#msl}~
z+BB8Dfc#rGyv|+7-eFXx!4jqsi7;w(Io5R~?BmEb3zLB>NDT-8JQCeJi9U{nJd#Ix
zaJ~oM?PD7r9(6NJBSqr3n8pxEz!Z{RuBNZ6x+PQ1IImdRx?#>gWWAwPs;$WMhICE6
z@%$fX3uUPl`MT6p^+jt*>BS3G_>8mdWWn5FZZgYo57K35SI6#%YARG)RWw6~Y|K=f
z3nsQJzM7~k87peVkhO}rBvZArN{wYzv4Y}YVW(Gbcu7ezEh<SHC;I}P-m5~wIzwPu
zOj|hS3a4!DR0jj8m(w06NxHnEN|Kk7B<OaniO*?C`f*Ke1~n9C;qm9!EaRf4Hi^e;
zM3VhQ@%YanIKPw*qgUKisiu1Anr^9!YEa|xs;<a%Q6>fz!RaAGkHd}T&>-Z#!Iy7R
zFs<INoh@!9+-z}Y-p*E?Y}L(HTeY@0wl(33V>^m1RvoeGiq+OP?exgzMK?XN6SdP*
zPI}5sPqn^iXHR4E(@u8W&5pNfyD>Ii+-3Sr5DrH2zoN>)fPM;r$cI3V_o1F5uwMby
zB%sQ9+5I<vNmDmubDrWpq1Zn~+Mid!{C75K8XIQN2w(yrgSUmRZ{tLGye??Ru!(Q*
z{Q_Myk0k{(@1Q}D=m{_$r^uGvG!_l|E|wuXbY!nWw=^OXFR`ZM-A9JLhYtJH6fuhi
zqYP6coZ4Im%6Bf<!i*!#xWY{9tHIO=W9T{N2qjl2fm3F5^NO1p-4X4~l#`iqGgGaL
zM^J-7yg?0ejH&Y{n70r(7DO<*4ch*wr|*rh#0~N}Lgak5Pz?M;VkG`J5gH{;l0a96
za6lLDCFV8dnra11J&brUeXZH_;#ZrpevQ5ly?Fd3RVNyVrCN?q6dNx|)CGC1X}!T5
zE(`+DnE(UF8T+~--h<-|@;&{$$NUz9;iL5pE*QUfdLvr=pjeK05si4ms%e3oNEVf^
z%FD)JPKSe*T{=f$SQ8D(;N0EP{YhJxgZ~5KPJA3Z+T5HES-m`bAi8uKx(HZJS*oII
ziXlNnDW&Nz0Y3Bd>UC>h6a&O7*bMhinB_?<LxcOo`~}Qw3do<_EV%s12gK&jI{aCe
zKim4Oohxk>++1m=^n}>CIVU&g=H^;oA5^@jmyTF+#S%zmetheSn;(B7KK<U#*PMLK
z&DUCW#QYqJW7q_{4&xh)`BSKQ3(OBX#}60BgKASDym5oX`|w8b%<PFLcZtHGr&vZ<
zH0c?fat}zz;Ij|#pab0(%`)q8a8CRE4Q4Xi9j;3yF06^0#y^~I|73F`M<VDA!2#SG
z#~09#pa+k?AX{p1L<<^#sTtCuOl8nh*&ANabh+8f`vB7!Xf=?@S*$=)gv-1I<~1g}
z2e4&}vyM3HinBmfS9CwLg^D9oT%iJbTA0{ca0?So;fz~2)B3K9o|B(+^OLRm0mLGT
zqljYI1Sn!yb@)Q#$+E038q?%z@PQKl7QZ%w4+;$1-&6i1LObpicP{wQ`ILSFe)w8V
z2h47iW!W|}V!!#{O(a?PZ0I+46Zg|Eu>9qIrP%N0H{DwQ^=6+h$HHdoH=9>(|L_9K
aU+z~P=U7;cezUoL8~TNE^bLFX>-8^ssh=?b

literal 0
HcmV?d00001

diff --git a/home/__pycache__/urls.cpython-311.pyc b/home/__pycache__/urls.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..439c859bd1bd19dcca15f1969839d313da847383
GIT binary patch
literal 357
zcmZ3^%ge<81iMtaGOB^}V-N=hSfPy1Za~I#h7^Vr#vF!R#wbQch7_h0<{YM6<|t-H
z1}277#uS!R<}4PN#uU~yY|EG#7*+!@1f(-Yv8J#GGiY+W1PN#|-eM_8EXjDu2;s1n
zWu}%F-(tAMnwgi9S^<*IOUzC6(`38FosyN9m!7XzT9i{<1TwFP4Mc$4R>Te@ZgB%;
zfM%7X7UdPMWcUmeV)&(^pOK%Ns-K^jsb8FtSd^+?P?VpQnp^@A1{tMSQ2C3)CO1E&
zG$+-rh!3a<<dk9`An}2jk&*EMgUkg~bb~?o0xJ5z#=y$i;L;(~5!w?yqx=Gk`b8G?
UD=g|Cn3?#Q8n{8QhzDpO0KQLG?EnA(

literal 0
HcmV?d00001

diff --git a/home/__pycache__/views.cpython-311.pyc b/home/__pycache__/views.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..3473687e5e2a5e8b1e236b64d68b14e2ee773b5a
GIT binary patch
literal 389
zcmZ3^%ge<81iMtaGRlDTV-N=hn4pZ$5<tduh7^Vr#vF!R#wbQch7_h2hA5^K=3oX*
zmX{!9D;aOG6{Y5-q!uMJLbZV?79eH@;?GJzVmd<!l3WeYxMe^qR>Q1e02;>RSH+)^
zpPQ<m2{fugFQX(krwF89lkpaNQEFjnYH>+1$P9&Fs`_Ac`H7kO#Tki3srm&)`B|yS
zB@p4V%+&H?y@JYHtYCwRIDmRUZYdT95)BM@xdkVvUy#<h$gO*YTlWHs?q{GdgP$hz
zErFD*#Ju!;z2c1gqLSp&lHwweHn9Gc3`LwEHan2`#bJ}1pHiBWYFESq<bs@3Yyc!a
aFf%eTK44J3fQmk_Ff!_WV8A56CISE%XjYj3

literal 0
HcmV?d00001

diff --git a/home/migrations/__pycache__/0001_initial.cpython-311.pyc b/home/migrations/__pycache__/0001_initial.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..904a85afd5f9ebd4cf933451fe6c63b9fbbb2b4f
GIT binary patch
literal 2325
zcmb_dJy07*6uuMEp_BMIVH^yyeiA7r*kcgCp25Zg1Hl81JrD?F)Z8rEMI4;&$mzrw
zR}?8Ssoa^8icH27luRm@F85}(&}_v_Dmr<fa+B<y{;(lHkvrYH_x8R0_Iq#dt^R0k
z4hZb}EBX5xY7~UOxlz4*73K5^Q{D<tfTAws#I%_6q&=eG5uORq^Q!<GkhtDZowU!i
zcQq^B0KE%BkMD%LdptCd)3O$@HPgsbDQ7~Y=QGur{M}kHPVX^@w*nH<A{5ddD5e{-
zLfY#QkZ)b8PJkZRz(yL^{k0JhdJla29!7yZ<!jXgB{xd0j=;tP|Gvm#*i(y<Zx9o3
zW88xAdHd{nR|a5m)syue1V3M!#h>Tf1e;xi|ATMK)m&h!>#ygmT+I1ez9HClBfhu3
zSnIO-w!1OGYPr6w9lU*w|0~yDt34E<c+l~Awb>5%uGxV*u+zo4ZU?$<vKqV*r^?sY
z^q-lB-L>jFbr&iJk?S+ddehA?%9<-i<rmeiTBM;FV+$EJurzZbV{2Pxp2`|jfvZom
z77T7$S`Jv->IT}TavoV4(6!fy1|iC4ENwHxn)Boz#<oXf?FwG0Ix@2M8ujr|L}g@T
zfRzQ%WLRDU<PeosHKfBlRq9L6Y3Mb`Q-227KsU1{*9=>O08*)7@b}38TY~!MEE5(o
zwn>AG<Yv|I*R)p6&=?~%3oH%*Xv?Z*0KIMpGP=g{MXClFA>WD)j19)CpzBmx)G`~$
zrXCH_fQ>Q?$z)-)1?6qVU$rf;0@h6`&mjZ4APk`qqE%4PZL68_d)d=M{i@2dR8<;K
zRd!?*bgnn4>MsSLS3Hf3B_pTPCWtl}7^{(n@)kb^X>ig)z(z0lVP|>yh&)lS&1qgU
zDo?HftE@K7uq?8uV#!l%P9<g$y|T+{z}!TY<MU79lwk><9`&u6In-wYtuN28P#-JZ
zI?CAP;remgmrAAj)e6tv&25VxqpsjeUS;RyPVGK!Y1?^L@`~-!&JQKOAjf_S5P!57
zN*;&q;%M*gDv9<U4Sg8K(Rn92Ponc!`LP&^;&^ILBJtGGB#w_e@o^F#$I3)8bO(3c
z-@Qk=?jL4w*QnDqO1eg|^0>&s`Z-v?6CEVcL97gwWM6wr$>)~?9|b1PxG1&N86=KF
zVH|n5yF?-nkCGq0#gREDGDjkFSed_q0h^QJb5c%ZfJ6qcGFS|C;_!pr5fXlIXyNdv
z6CNdD&gwb_;p20OE`In4#}}OV0*NnRWwCgU+$|g#b0T9TGKQ6>#n3l6IkY!Tl0!~%
zgd|6>@~9a48Yc$#Mo41NNeq+3Fjhv2p$Lu*>~4|Rz)}1ADIA+|VlyN*gO%A*P~w%5
zd1aV5<D%4FuT1B0=r-=?ezQe7x(}z`e~&w6osL=3F^iSwSHNEBs_m!~A0Y8^*=nSZ
zp5w(OoLF`e%OtUkm7gzV__(`G+L`6I#XH{p;$HT6sSMYFku`hairXe`XOzFmejet=
z4l?bN|4F&&o?64q<bT=uB_>J@q9~RmLF~c8cNc#psaKRr!bR~WK$PT1?l`-|>#qAR
DB%)Gf

literal 0
HcmV?d00001

diff --git a/home/migrations/__pycache__/__init__.cpython-311.pyc b/home/migrations/__pycache__/__init__.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..25a7e61b76f5232280f1cf9740fb3f88a1daadde
GIT binary patch
literal 160
zcmZ3^%ge<81iMtaGC=fW5CH>>P{wCAAY(d13PUi1CZpd<h9V{)|1(JPm$80Eer~FM
zeqyG6aYkZMs(wLHepYI72}C$IGrcIWBr`v+SU)~KGcU6wK3=b&@)w6qZhlH>PO4oI
aE6@y(Eyesm;sY}yBjX1K7*WIw6axUw>?JDz

literal 0
HcmV?d00001

diff --git a/templates/home/index.html b/templates/home/index.html
index c8d2475..576344f 100644
--- a/templates/home/index.html
+++ b/templates/home/index.html
@@ -23,7 +23,7 @@
 							<li>
 								<a href="#" class="icon solid fa-angle-down">Servicios</a>
 								<ul>
-									<li><a href="generic.html">Tickets</a></li>
+                                    <li><a href="{% url 'tickets:list' %}">Tickets</a></li>
 									{% comment %} <li><a href="contact.html">Contact</a></li>
 									<li><a href="elements.html">Elements</a></li> {% endcomment %}
 									{% comment %} <li>
@@ -37,7 +37,8 @@
 									</li> {% endcomment %}
 								</ul>
 							</li>
-							<li><a href="#" class="button">Sign Up</a></li>
+                            <!-- Botón de acceso rápido a la gestión de tickets -->
+                            <li><a href="{% url 'tickets:list' %}" class="button">Gestionar Tickets</a></li>
 						</ul>
 					</nav>
 				</header>
diff --git a/tickets/__init__.py b/tickets/__init__.py
new file mode 100644
index 0000000..a74f6fd
--- /dev/null
+++ b/tickets/__init__.py
@@ -0,0 +1 @@
+# Required for Django app
diff --git a/tickets/__pycache__/__init__.cpython-311.pyc b/tickets/__pycache__/__init__.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..8e64f2d7ed54062a3f91113b5d5c52e6a432c6d4
GIT binary patch
literal 152
zcmZ3^%ge<81cItv8B##{F^B^Lj8MjBHXvg<LkdGMgC?WjN`@jPApbK+@|U)LMt*Lp
zetu%6esM-(QL27HQGQlxa*2LPW^#6FNwI!>d}dx|NqoFsLFF$Fo80`A(wtPgB37VY
Xkm<$zK;i>4BO~Jn1{hJq3={(Z73?8*

literal 0
HcmV?d00001

diff --git a/tickets/__pycache__/admin.cpython-311.pyc b/tickets/__pycache__/admin.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..e7a79a4a34e3f8ad3c8aefc66ace2fbf39a311c2
GIT binary patch
literal 908
zcmZuvF>g~b5I(<`_Yx9<P}QoXLwQ1~L^>ot00crHF+f>hKu-e8eRdO<m-mA04BaBp
ziK$!vK`PXdpTHj|QisSZQ@2!Q>crV;S}OHypYP6hpU-zbY&PqF^kn^e?~nleamt+H
zOW}Ng!U1sLB!@mp2>~APFc11+8WIRVke$jrNQ7g=Il?ug0A2&H>;aF^E1Fx!A^PB&
z(HOU*xdLg-<M+_2o;pj5*og7IEKVIFYVik|eGw+Raz|l)+4&kO2OuCN9MXW3G~_{A
z;b9u_3c^MR8{5VV;e|sTKF5f9g7mU1wq<vySSEk{ED|n~S39iemWjVT88F2Xkth9<
zi@Z!`5N#ickb&ejGScM2#@aA5)V7`}!HnQ^Yu7fI*0NimV#@0SW?F%A)mKeqt%|yX
zn{9BRGbIN`mW5rs2BCDQg(_HI*rosAuFdaSRa>Lfc~ENWlwzvG+{t$-{W@g%<w=!N
zUS`gmOKm8ZdXO{B(QDf>H$vH_7EEP5x-CV{^$$45%;4g2r&snxr)09DdrXPWK$SZp
zGachwqC37+?ZK|9qPu6V;d%qv=xR(WK~$T9V>MX(NJeib3mc<1lf_S?O*hnod9ZuY
zJ?^{E&dS0lxux8nv9a%hRu0|Pl<49^FzfoJYmV>hEQ1w?<l$CPx~M&!mE@Uvh^qTE
z`Wv!oNC=rga(r`6VD<RsoW>B`A1&>z?Z>~#@(Ed<237KzOyPFEzkagt=*%Df_53V^
KVCB{@pX5LANAjfr

literal 0
HcmV?d00001

diff --git a/tickets/__pycache__/apps.cpython-311.pyc b/tickets/__pycache__/apps.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..097a458e1c820ec45cf11af849d708ea7e382a3a
GIT binary patch
literal 525
zcmZutJx{|h5IrX;l(s>Lk4haF7!b;mtPBXLfItYT3rtxoQ@d>-X+k~*m^v^qA(s9F
z5aQ2ttg<q(6_u$I=Ojf!aJJ9ye9zCmd(rg@psj5`^qz2km%-dh1(=!$hQNUn7d&DU
z0t%b}SMGtUf;_7LZ@6-^6|S9wQTmXfLDHpW5FGmbj?--yjBF!CFs&mPf&iOvz`Mj&
zxngTvMGY<0FP!$Zh@)KKZj)cJe%CkorRn)xxRH6_bel=+A3MV3>0+F-TSh4@Q`%>q
zpfs&eisZzVxJKzs!rUUW%0-7IZcG_U&`zeI$=oYU<@aVgR?qi@<uk{MdMp%H5c*f5
z9b3gi77K#N3~oc&smy5zq6WIb&lop$M_PScT^}6D5$bbp%TUv5QIQl1We;<ynnW3K
t8PTk~mshYKu3#uz7oDM-sDzL)Y>j@;$$~;QCh*rio_@;HuYXe6W8WBEf#LuF

literal 0
HcmV?d00001

diff --git a/tickets/__pycache__/forms.cpython-311.pyc b/tickets/__pycache__/forms.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..9d989993f78e25ed52f77a34dadb918c0f826790
GIT binary patch
literal 1353
zcmZuwy>App6rcUPyFGsdgN+Riw^E42M#!fqqD!a{Q3~8(nr&9&ox$GA?9MW?8weFe
z3M)lKfdqwXM-imTpTIxhay3<?RPNTYD_6Xky^Cew?d|X0oA>5@@1OJY0RjrY{(ZOS
zAoQOWX5>wolY79tMg$Ryq1=is3lW<*%+8(Iv5<{^M8y3K5sz9EcXs&zyuF3Dqu3+<
zLlpInv=~{+d(1^HkE~Aex3ctSTBV(Bhcibfw?Tf5D2gqDVw+g8V*=U`&^fRn2)rG|
zE^#4<r-IJkeTY%N09_CQ8Hr($@vy`KhpC`ggmn=XHT{K$l}TYEd{kvDdyd1W8QGzg
z3`;5`FR(r%TpCa2dQK-?fCGlZQcy{Y3a8ooe~OUMkZ~ENI4`-}Fc&Tq)|+N~@(h^s
z!l(o3Tg2Y6W6ws^pUmu_OyUx6-+t#GK)>GVo*6P${h361q)!GU*mpj*Bg1_=9*{XQ
zZ@7RgK$8~F7SEfs@qkuXc~w?1s)mHhRAgn9@j`i7QPx$x1W~r$|6SFLLw#)8tjJbg
z%CMAbSTdZ_UCsy<db+r(gjD^CKC3Xa`T3Q5#^*K-;c_YXHlsN{(j$%>F%N%Y0YJHe
zKb4U!^h$~$K&_iF4P4Iw-}xy`r#GXa>L*EobDAV7NRphBnrVJ6NuJc0bsC}9Sb3nN
zO!<#9%7_$tG1XuT^7}~_sQQ}KsjA*|@XBX+n=<(qIssdBc5A%Lb2{cY8_Qj=977os
znpWd(apc%+^hWusa&<Sw050hg<R1Vp{(qV;R`$GRY3<DqhnJ!~|KH`CFCV>1nzgVQ
zeb;)<?S&R~u(EiJoR!5>4Q(H-fAi+f{@rHnt7dekSzT*;?zdpt!8(|_>tG7d4ui`<
zivad|?J8OsHP<8Xy98$dd%k|emynVe0c=K|xU7XM8kPZ6FG&bblf>x7x;{7NH#Dcm
zVL<m(-Um3ZthF7l4^aSuOCH4g6pr=T>1PyO2<?3{@|8~}xY*&{kbE;Z*-dfqKu=MB
z$z3WJ(>v>b->tx1aT8qW4@D*btz%hMgH{hO{u*@c@ZzuauUe4!r|@$5)#zBCpMFMZ
GlK%jXX;bC^

literal 0
HcmV?d00001

diff --git a/tickets/__pycache__/models.cpython-311.pyc b/tickets/__pycache__/models.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..9850aa9712eeb52d51bdfeede099418060dcbce9
GIT binary patch
literal 2236
zcmZt{&2QUO{5g&jCr#QW{Q!-&n64iS%Th6V*kJ-yT?_1^AT^ydgRoq`x5S-eXU{gQ
z6^9&ls1S!8kU$zp98ei*Cr#o{*o9*%MZ$VlPP=7lPrJbH*>Ts8z1Tm$-|zjtKVJUG
z=d%db*!1`H2??QpITA0x!*y^CK0hIhuwbEvpb7%tC#*z6R7C+L&?g9s4-rlhVI$d-
zK|3NsyYNO!m9VsmN~sqdEeR~ua4@l4*d^CoLX93<_>p_a!A*giB}f%8QWIEEMV!E5
zEukh8h)5f$SO_Qgq#fYhg*RGiI^>8op&cOa#)nAFgr{NPoJjgWTP{AvDV*MucOa16
zqhQqh8zlOVBr-UIv$$_Bw*x-y9{HsXoboeIlDL0w;8bb`L$1PWZF_^KqA8x?D4gOL
z3X4#LA`I;$zz2Avr4Hlahe#d4Bar@4ma3Y@J>vQQz-d;2b&J=*QCwmhrUjd(PIbl7
zl^St9^Z8%4f{EgVGHxXsN-XMF?~&j`Y@+zK;yr)r`Ib`#cGsY0)8MjY#dm$3nvP;n
zqGN}aLj^HWcg>m&WaYwrAM_|X*9PW@)l*+8E8qp^*i`NkqprK$8?Gx<4^-XoeBCm)
zB0?opUrMk{6BL0mkFd-a@fPT^?r{t|OkU{iUi=4{fHurF^aq+n?3!0+1HFJXZptHg
z>)cu|j{AOO|Co;=%Q&_MNhDw`M~THHG+S?g?K-iVnnxaZRW=yw)LkAnC>=kp^la=B
z<^9Eywr^QXTDNrj9vuJ*9R%=VnD5d6N+RW*%hE>OF%9CfG$wa--|`@)obG#$W;@?%
zI>vy@F@9p);-NVh13kybtriZPn#3YZZxY%^des-TPvsWz^sT;2z5HmpM|sn;bad>l
zlu}IA!X#)K%W4`-yKfQL=QQm;RE(zwFxjD)P}8ol+&6@-J1&V5H*_4+nwC#>>rZq5
zCeW+WT-|AqIY&3=+`3N5T$4H*#PH^N37(5?mP&JzCApjQ97xT;>rMh_9sPpg_a1$`
zEeCJCyPXRrX4~>R(L>Jz8=VGV#F>FT;#UE`%?`LKxC@2v&<5<H^%!nLz>oMJqhEQx
z#FZ^M%7}7)OH?i?(1HmQGs!bOi}1V8CDvV+iz##pAWLhS>rqYH>hC4GhhKz4m)EC-
zf`Q9FPyI669=Ht8Z}|6(XxEl6hn}yLMk!~c;~Y!?;7YM$K)U-^s|(e&Rc-Op&p%sS
zTBST5mRW=>E}O){^g@VNp<hFs_4S6?GaZ{{mmNx=b8nDM%9Fv;iwmoZ3)hxdHg1FU
zO(w4{RkfA1n>Sfs+~}I;uoR53=esO_4W^@NHb`XPNK*G$)^Fl)bfB4d_UZc^@R~&x
z;rR)>ECl?o$(@1By)I}sAxUx<aWIH7=L1>kO5$j$wbIR^{P^~ACpY#)Z0E}RxpF60
zZY>4H$wxDt;^cmDs#Bb5-3SVkk48I%$w1Bp#kYT~1S2y+vC_>*#nej#;E;pX^==Lg
zO>sf65HijM`9jcN3`S;y;s@P)dI;D79CFaQ0lxH4Y~SwW$Db6Ref{^B?fjkn{GCqz
zPHQ<ROml<N&*s~OEBl2jox+vY^_cj?YZvDC3-g`AJlIT%(uFQM3tn>C;p>B}Abr?H
zXF-%gKBIgzGk8O{Yfc5PM=fx!hZ~OVQFFZl*F?P%jZsu;Dg2j+vVXE7ujH%IY=1<r
tf_C1@t_Gkh3W5-zvG&O)Ko{F5pKfYa0GH2#?b|<m^^(&M-*6bl^FQ6bQ#t?u

literal 0
HcmV?d00001

diff --git a/tickets/__pycache__/urls.cpython-311.pyc b/tickets/__pycache__/urls.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..86b52358fe5aeac687bb8fdb7615271c08dcbbd5
GIT binary patch
literal 497
zcmZ8cJ8J?#5T3o;)6+xpFkK#92!ePaWe~BjP7_RFBZs@_>AkpH^Qx|t{DGuQl@O95
zKjj1q*-A)dC)inKH>ZV}-5q9z@B8N4_d+2LB1)%Ey$b~JBb!ZR*2U5j#WN5f$N?9%
z5CWnQ)lpovrHUH2umThjjjDZZLnfK8?3)VkDP9_X7+qjCx<GROF<qsVCHZS88FNW0
zA&vu!_2$BwY_waO-bFmi?9PC)hy%xt9We>>ESEm+T8vSTm{r?jm%*TB@=Q9pD(T!H
zeaq|mm0{>ap>!2yWs;7$ZUsSGN^m39ZcANWNZIXl#tlIgb{Gx4=mVC52&*%*=eyMO
zE!&KGR!Get^!v2K%(X{TuB!wOE4}LaWa!XZSQI?@p{Os?LPZEo;V9X@Qz$0ecV-;K
z`a%aS7dJ-xqvoV=@_Lit@)(yVxIDvp+(>eVFU`sE`S*Q->tkG>;QAt`?I^J!Pq-)6
F{Q~hkg!lje

literal 0
HcmV?d00001

diff --git a/tickets/__pycache__/views.cpython-311.pyc b/tickets/__pycache__/views.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..be929cc30291383c134bfff1a00c9900b0798fcc
GIT binary patch
literal 2223
zcmZ`)TWcFf6rR24VqM+XPU_l;2lwKtv86)X2Zy9-p~z69w8Wthy@<`u)LLg(tIY1I
zNsx<L40VDbp-_^C1Y9U?Q|F=3LVrO1fD{B33x+_S@}?5<lBb^8)k>Dr4x`yQmpSLm
z%=e9cP9|dr+B<LGDqjd8^fwoRCiW)JYcRQs2qJ=x4526pd@kyuAr&P<F3Luz81i(I
z9yTJy2+U;?(xb*mam1U4^_USa#sx$L64^w%5N|KYf{F>yMqkk;$;c|o#GY}#jNqnp
zb4{z17`^IfjFODxh8e98%G@Z3pi*u3wKZy&%**RAFPW^g`2Hd+j4)cG%%aZ(KT!Ch
zre2{oSYrMxZ!$yW#-PDDAPIiY?|}9$vI9MQ*ZY1u!RZ{ZqC-2|5bVgnJiO}-v5wZ|
zz)FNGUOaZ=;0o~IwRmk8GVk@X!)kFS9M}$ihqJH?;CG;gfhQ3kNrz%ekS`i|)TPqM
zVE*4RhI0wXo(NVTWFH&Mi9DQXSXxDOp)QipeQ`s!CkLzQh=l9%F5JW(zYVVeA|lSO
zFpXhoUuc%C;40H9s#aBWOenU!%eAsG&!ON@%VrAJp?kgq4@|FthE{B9;p@0cnW5Pf
ztBfiPI~5aG99lE8UX)c+H?d<m3e!vrD-K_!sR{w1>QF)}SW#8@GOS?82Nga35wNQG
zt6ll?&sHzy0dHZ|G$6~%M6bxxyrzukMtZU<e+f{$aik~aG=TTDY}q#SOp@`-a3emr
zEmu->opI*6VT0OblduFAqMB8zDY`~n*-~oMl^qKR663qFDJfmP&N!YJ2L$8T%Y-;R
zu6n1G=E_kR+^}DO8&OR-o@=(n7xDAPFW=3TO@ro4Max-bh0$D<nVfF9pyrxJzp}E`
z>u%iFl=vRmGz8!qu>ORhfnJQF^u%`MuM~cg!mZS7J2l%_-j7e*JhOeK@kuv~qUp`A
z?;U*-nQ2C5_S2L1=I+n8(sS+f+?L#lr*EIVb@t}D?Q>luk9^RXn7n)G`%63Y&ZXAG
ze0ySkE8oF$KP9&E?Zoj;;>hilTPrsU+l8&d{@B!m<(>1b=~M0LQ?0SZ_Sj-Gu?X45
zr#hqK-H?<HcM%MY<rh(uIC5vMIhFhESS!BNjxROkrRPvOQV+7e|4#e?7I-K6>;&{5
z@T&`tgk6yL`nnB~0Dnt;8F<%6IOzMY0&us_f1W*PukbDzSRgaM$6h0c7=D;{8QIwc
zSDz{hQx!mdk3kr)YGOc5g=hqL;Q4%PX=@e0xE?qG=X$)r03r-9)3qBO-GC9=<KHVl
zEk(5*Uk&RxJqX0bvq9)tpCv#Kv3kXg25Odq!ZK0D-#8!pVOVNA7CQ<WH?CN`7QnP^
zGXClefSr-p>s&Fz2mYK`{A>ZdYzn?^QnC4_N<KW<o1lA(JADcRATxzhGY@LN%r=t?
zt>i*GxzNZz9Y4{?Zx%X}`2KVw-<FSd<k)vB->!U9*eo;(`|+_KmhYW!jh}3fpKQhF
z+wu9PJkO3pxbvBmdxEShl{GWVsl>F)S$I9lSwdBlDNwn^cx~=z&&evA%vK%S^2q6L
zi64L)?>RV3w><U&?M*^K@ScSbe>W`eJ@BaJ?dl=&itu**GI|F59i4v2-h+4?s22YN
z?n;6nbkI_BxOdP;&HwKmG}9dJPthCA;od>Vo5LM=CXRN+W5Ve!g5e(t#LW}FV$n0j
Qg@rDHp>GNlp4QvUzjQ1MGynhq

literal 0
HcmV?d00001

diff --git a/tickets/admin.py b/tickets/admin.py
new file mode 100644
index 0000000..059e3cd
--- /dev/null
+++ b/tickets/admin.py
@@ -0,0 +1,13 @@
+from django.contrib import admin
+from .models import Ticket
+
+
+@admin.register(Ticket)
+class TicketAdmin(admin.ModelAdmin):
+    """
+    Configuración de Django admin para el modelo Ticket.
+    """
+
+    list_display = ('id', 'title', 'status', 'created_by', 'assigned_to', 'created_at')
+    list_filter = ('status', 'created_at')
+    search_fields = ('title', 'description', 'created_by__username', 'assigned_to__username')
diff --git a/tickets/apps.py b/tickets/apps.py
new file mode 100644
index 0000000..45a7d76
--- /dev/null
+++ b/tickets/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class TicketsConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'tickets'
diff --git a/tickets/forms.py b/tickets/forms.py
new file mode 100644
index 0000000..709d747
--- /dev/null
+++ b/tickets/forms.py
@@ -0,0 +1,28 @@
+from django import forms
+from .models import Ticket
+
+
+class TicketForm(forms.ModelForm):
+    """
+    Formulario para crear un nuevo ticket. Utiliza widgets personalizados
+    para mejorar la presentación de los campos.
+    """
+
+    class Meta:
+        model = Ticket
+        fields = ['title', 'description']
+        widgets = {
+            'title': forms.TextInput(attrs={
+                'class': 'input',
+                'placeholder': 'Título del ticket'
+            }),
+            'description': forms.Textarea(attrs={
+                'class': 'textarea',
+                'placeholder': 'Describe el problema',
+                'rows': 4
+            }),
+        }
+        labels = {
+            'title': 'Título',
+            'description': 'Descripción',
+        }
diff --git a/tickets/migrations/0001_initial.py b/tickets/migrations/0001_initial.py
new file mode 100644
index 0000000..9409b52
--- /dev/null
+++ b/tickets/migrations/0001_initial.py
@@ -0,0 +1,35 @@
+# Generated by Django 5.2.3 on 2025-07-30 14:00
+
+import django.db.models.deletion
+from django.conf import settings
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Ticket',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('title', models.CharField(max_length=255)),
+                ('description', models.TextField()),
+                ('status', models.CharField(choices=[('pendiente', 'Pendiente'), ('atendido', 'Atendido')], default='pendiente', max_length=20)),
+                ('created_at', models.DateTimeField(auto_now_add=True)),
+                ('updated_at', models.DateTimeField(auto_now=True)),
+                ('assigned_to', models.ForeignKey(blank=True, help_text='Usuario que atiende el ticket', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_assigned', to=settings.AUTH_USER_MODEL)),
+                ('created_by', models.ForeignKey(help_text='Usuario que crea el ticket', on_delete=django.db.models.deletion.CASCADE, related_name='tickets_created', to=settings.AUTH_USER_MODEL)),
+            ],
+            options={
+                'verbose_name': 'Ticket',
+                'verbose_name_plural': 'Tickets',
+                'ordering': ['-created_at'],
+            },
+        ),
+    ]
diff --git a/tickets/migrations/__init__.py b/tickets/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/tickets/migrations/__pycache__/__init__.cpython-311.pyc b/tickets/migrations/__pycache__/__init__.cpython-311.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..fbcb4bc8e4e85ded99dc6ea2c6ce56c6308774be
GIT binary patch
literal 163
zcmZ3^%ge<81c|C$86f&Gh=2h`DC095kTIPhg&~+hlhJP_LlF~@{~09t%S=BbKQ~oB
zKQU9kI3uwrRllGpKPxr4M8706IXktaSU)#2y(qCHGe56bKR!M)FS8^*Uaz3?7l%!5
heoARhs$CH)&=`<K#r#0x12ZEd;|B&9QN#=s0{}1CCL{m=

literal 0
HcmV?d00001

diff --git a/tickets/models.py b/tickets/models.py
new file mode 100644
index 0000000..7c06ae7
--- /dev/null
+++ b/tickets/models.py
@@ -0,0 +1,44 @@
+from django.db import models
+from django.contrib.auth.models import User
+
+
+class Ticket(models.Model):
+    """
+    Modelo sencillo para la gestión de tickets.
+
+    Cada ticket tiene un título, descripción, usuario creador,
+    usuario asignado (quien atiende el ticket), estado y fechas de creación y actualización.
+    """
+
+    STATUS_CHOICES = [
+        ('pendiente', 'Pendiente'),
+        ('atendido', 'Atendido'),
+    ]
+
+    title = models.CharField(max_length=255)
+    description = models.TextField()
+    created_by = models.ForeignKey(
+        User,
+        on_delete=models.CASCADE,
+        related_name='tickets_created',
+        help_text='Usuario que crea el ticket'
+    )
+    assigned_to = models.ForeignKey(
+        User,
+        on_delete=models.SET_NULL,
+        null=True,
+        blank=True,
+        related_name='tickets_assigned',
+        help_text='Usuario que atiende el ticket'
+    )
+    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default='pendiente')
+    created_at = models.DateTimeField(auto_now_add=True)
+    updated_at = models.DateTimeField(auto_now=True)
+
+    class Meta:
+        ordering = ['-created_at']
+        verbose_name = 'Ticket'
+        verbose_name_plural = 'Tickets'
+
+    def __str__(self):
+        return f"Ticket #{self.id} - {self.title}"
diff --git a/tickets/templates/tickets/index.html b/tickets/templates/tickets/index.html
new file mode 100644
index 0000000..65bb38e
--- /dev/null
+++ b/tickets/templates/tickets/index.html
@@ -0,0 +1,125 @@
+{% load static %}
+<!DOCTYPE html>
+<html lang="es">
+<head>
+    <meta charset="UTF-8">
+    <title>Gestión de Tickets</title>
+    <!-- Reutilizamos la hoja de estilos principal para mantener coherencia visual -->
+    <link rel="stylesheet" href="{% static 'css/main.css' %}">
+    <style>
+        /* Estilos adicionales para la tabla y formulario de tickets */
+        .ticket-container {
+            width: 90%;
+            margin: 2rem auto;
+        }
+        .ticket-container h1 {
+            text-align: center;
+            margin-bottom: 1.5rem;
+        }
+        .ticket-form {
+            background: #f5f5f5;
+            padding: 1rem;
+            border-radius: 4px;
+            margin-bottom: 2rem;
+        }
+        .ticket-form h2 {
+            margin-bottom: 1rem;
+        }
+        .ticket-form input[type="text"],
+        .ticket-form textarea {
+            width: 100%;
+            padding: 0.75rem;
+            margin-bottom: 1rem;
+            border: 1px solid #ccc;
+            border-radius: 4px;
+        }
+        .ticket-form input[type="submit"] {
+            display: inline-block;
+            padding: 0.75rem 1.5rem;
+            background: #5c9ded;
+            color: #fff;
+            border: none;
+            border-radius: 4px;
+            cursor: pointer;
+        }
+        .ticket-form input[type="submit"]:hover {
+            background: #4387d6;
+        }
+        table.ticket-table {
+            width: 100%;
+            border-collapse: collapse;
+        }
+        table.ticket-table th,
+        table.ticket-table td {
+            padding: 0.75rem;
+            border: 1px solid #ddd;
+            text-align: left;
+        }
+        table.ticket-table th {
+            background: #f2f2f2;
+        }
+        a.attend-link {
+            color: #2d7cff;
+            text-decoration: none;
+            font-weight: bold;
+        }
+        a.attend-link:hover {
+            text-decoration: underline;
+        }
+    </style>
+</head>
+<body>
+    <div class="ticket-container">
+        <h1>Gestión de Tickets</h1>
+        <p><a href="{% url 'index' %}" class="button">Volver a Inicio</a></p>
+        {% if user.is_authenticated %}
+            <div class="ticket-form">
+                <h2>Crear nuevo ticket</h2>
+                <form method="post">
+                    {% csrf_token %}
+                    {{ form.as_p }}
+                    <input type="submit" value="Crear Ticket">
+                </form>
+            </div>
+            <h2>Lista de tickets</h2>
+            <table class="ticket-table">
+                <thead>
+                    <tr>
+                        <th>ID</th>
+                        <th>Título</th>
+                        <th>Descripción</th>
+                        <th>Estado</th>
+                        <th>Asignado a</th>
+                        <th>Acciones</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {% for ticket in tickets %}
+                    <tr>
+                        <td>{{ ticket.id }}</td>
+                        <td>{{ ticket.title }}</td>
+                        <td>{{ ticket.description|linebreaksbr }}</td>
+                        <td>{{ ticket.get_status_display }}</td>
+                        <td>{% if ticket.assigned_to %}{{ ticket.assigned_to.username }}{% else %}-{% endif %}</td>
+                        <td>
+                            {% if ticket.status == 'pendiente' %}
+                                <a href="{% url 'tickets:attend' ticket.id %}" class="attend-link">Marcar como atendido</a>
+                            {% else %}
+                                Atendido
+                            {% endif %}
+                        </td>
+                    </tr>
+                    {% empty %}
+                    <tr>
+                        <td colspan="6">No hay tickets registrados.</td>
+                    </tr>
+                    {% endfor %}
+                </tbody>
+            </table>
+        {% else %}
+            <p>Debe iniciar sesión para gestionar tickets.</p>
+            <p><a href="{% url 'admin:login' %}">Iniciar sesión</a></p>
+        {% endif %}
+    </div>
+</body>
+</html>
\ No newline at end of file
diff --git a/tickets/urls.py b/tickets/urls.py
new file mode 100644
index 0000000..1e7225d
--- /dev/null
+++ b/tickets/urls.py
@@ -0,0 +1,11 @@
+from django.urls import path
+from . import views
+
+app_name = 'tickets'
+
+urlpatterns = [
+    # Página principal: lista y creación de tickets
+    path('', views.ticket_list, name='list'),
+    # Acción para marcar un ticket como atendido
+    path('attend/<int:pk>/', views.attend_ticket, name='attend'),
+]
diff --git a/tickets/views.py b/tickets/views.py
new file mode 100644
index 0000000..ca990f0
--- /dev/null
+++ b/tickets/views.py
@@ -0,0 +1,48 @@
+from django.contrib.auth.decorators import login_required
+from django.shortcuts import render, redirect, get_object_or_404
+from django.urls import reverse
+
+from .models import Ticket
+from .forms import TicketForm
+
+
+@login_required
+def ticket_list(request):
+    """
+    Vista principal de tickets.
+
+    Muestra la lista de tickets existentes y permite crear uno nuevo.
+    Solo usuarios autenticados pueden acceder a esta página.
+    """
+    tickets = Ticket.objects.all()
+    form = TicketForm()
+
+    # Procesar formulario de creación de ticket
+    if request.method == 'POST':
+        form = TicketForm(request.POST)
+        if form.is_valid():
+            ticket = form.save(commit=False)
+            ticket.created_by = request.user
+            ticket.save()
+            return redirect(reverse('tickets:list'))
+
+    context = {
+        'tickets': tickets,
+        'form': form,
+    }
+    return render(request, 'tickets/index.html', context)
+
+
+@login_required
+def attend_ticket(request, pk):
+    """
+    Marca un ticket como atendido.
+
+    Asigna el ticket al usuario que realiza la acción y actualiza el estado a "atendido".
+    """
+    ticket = get_object_or_404(Ticket, pk=pk)
+    # Actualizar estado y usuario asignado
+    ticket.status = 'atendido'
+    ticket.assigned_to = request.user
+    ticket.save()
+    return redirect(reverse('tickets:list'))
